#
# builds substation related programs

# Compile c++ source code
.SUFFIXES:.cpp .bsr .bcl

BASEDIR=../
XREFDIR=${BASEDIR}/xref/
BINDIR=$(BASEDIR)/bin/
INCDIR=$(BASEDIR)/include/
LIBDIR=$(BASEDIR)/lib/

CC=@CC@
CCC=@CXX@
CXX=$CCC
RANLIB=@RANLIB@
RM=@RM@
AR=@AR@
MV=@MV@
MKFLDHDR=@MKFLDHDR@

BITS=@BITS@
OBJECT_MODE=$(BITS)

CXXFLAGS=@CXXFLAGS@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
LIBS=@LIBS@

TARGETS=@TARGETS@

all:${TARGETS}

fml-tbl: 
	$(MKFLDHDR) -d ./ $(FMLTABLES)

globber: clean
	-$(RM) -R Makefile autom4te.cache config.log config.status 

codecheck:
	$(CODECHECK)

clean:
	${RM} *.o core *.a
	${RM} ${TARGETS}
	$(RM) *unc-backup*~ *unc-backup*~

cxref:
	cxref *.c -xref -index-all -latex209 -O${XREFDIR} -I${INCDIR} -I${INCTUX}

# c build rule
.c.o:
	$(CCC) $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) -c $<

.c:
	$(CCC) $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) -c $<

# cpp build rule
.cpp.o:
	$(CCC) $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) -c $<

.cpp: 
	$(CCC) $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $< -o $@ $(LDFLAGS) $(LIBS)

# Build a simple Tuxedo client program (buildclient)
.bcl:
	CC=$(CCC) CFLAGS="@BFLAGS@ $(CFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS)"  \
	buildclient    -f $< -o ../bin/$@ -l "$(LIBS)"

# Buil a simple Tuxedo server (buildserver). Exported functions are provide through a file <targetname>.func.
.bsr:
	CC=$(CCC) CFLAGS="@BFLAGS@ $(CFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS)" \
	buildserver -s @$@.func -f $< -o $@ -l "$(LIBS)"
